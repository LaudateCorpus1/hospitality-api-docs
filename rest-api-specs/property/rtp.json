{
  "swagger": "2.0",
  "info": {
    "title": "OPERA Cloud Rate API",
    "description": "APIs to cater for Rate Availability functionality in OPERA Cloud. <br /><br /> Rate Management provides all the tools you need to effectively define and manage the rate structures for a property in OPERA Cloud. Some of the things you can do include creating and managing rate codes, rate classes, rate categories, display sets, rate strategies, as well as managing promotion groups and codes.<br /><br />Compatible with OPERA Cloud release 21.3.0.0.<br /><br /><p>This document and all content within is available under the Universal Permissive License v 1.0 (http://oss.oracle.com/licenses/upl). Copyright (c) 2021 Oracle and/or its affiliates.</p>",
    "version": "21.3.0.0",
    "termsOfService": "https://www.oracle.com/legal/terms.html",
    "contact": {
      "email": "hospitality_apis_ww_grp@oracle.com"
    },
    "license": {
      "name": "UPL",
      "url": "https://opensource.org/licenses/upl"
    }
  },
  "schemes": [
    "https"
  ],
  "basePath": "/rtp/v1",
  "produces": [
    "application/json"
  ],
  "paths": {
    "/hotels/{hotelId}/bestavailablerates": {
      "get": {
        "summary": "Fetch Best Available Rates",
        "description": "This API allows to fetch Best Available rates for rate code(s). <p><strong>OperationId:</strong>getBestAvailableRates</p>",
        "operationId": "getBestAvailableRates",
        "parameters": [
          {
            "name": "hotelId",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 2000,
            "description": "Unique ID that identifies a single hotel property."
          },
          {
            "name": "startDay",
            "in": "query",
            "required": true,
            "description": "The starting value of the date range.",
            "type": "string",
            "format": "date"
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "description": "Indicates maximum number of records a Web Service should return.",
            "type": "integer"
          },
          {
            "name": "offset",
            "in": "query",
            "default": 0,
            "required": false,
            "description": "Index or initial index of the set(page) being requested. If the index goes out of the bounds of the total set count then no data will be returned.",
            "type": "integer"
          },
          {
            "name": "rateCode",
            "in": "query",
            "type": "array",
            "collectionFormat": "multi",
            "items": {
              "type": "string",
              "maxItems": 4000
            },
            "required": false
          },
          {
            "name": "endDay",
            "in": "query",
            "required": false,
            "description": "The ending value of the date range.",
            "type": "string",
            "format": "date"
          },
          {
            "name": "daysOfWeek",
            "in": "query",
            "type": "array",
            "collectionFormat": "multi",
            "description": "Allowed values for the days of week type.",
            "uniqueItems": true,
            "items": {
              "type": "string",
              "enum": [
                "Monday",
                "Tuesday",
                "Wednesday",
                "Thursday",
                "Friday",
                "Saturday",
                "Sunday"
              ]
            },
            "required": false
          },
          {
            "name": "lengthOfStay",
            "in": "query",
            "type": "array",
            "collectionFormat": "multi",
            "description": "Allowed values for length stay type.",
            "uniqueItems": true,
            "items": {
              "type": "string",
              "enum": [
                "One",
                "Two",
                "Three",
                "Four",
                "Five",
                "Six",
                "Seven",
                "Eight"
              ]
            },
            "required": false
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "200": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              }
            },
            "description": "Response for validating a coupon.",
            "schema": {
              "$ref": "#/definitions/getBestAvailableRatesDetails"
            }
          },
          "204": {
            "description": "BestAvailableRates not found."
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "RatePlan"
        ]
      },
      "post": {
        "summary": "Create a Best Available Rates",
        "description": "This API allows to create Best Available rates for rate code(s). <p><strong>OperationId:</strong>postBestAvailableRates</p>",
        "operationId": "postBestAvailableRates",
        "parameters": [
          {
            "name": "hotelId",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 2000,
            "description": "Unique ID that identifies a single hotel property."
          },
          {
            "name": "createBestAvailableRates",
            "in": "body",
            "required": true,
            "description": "Request to create best available rates for rate code(s)",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/createBestAvailableRates"
                }
              ]
            }
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "201": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            },
            "description": "HATEOAS links which help the consumer to navigate to resources",
            "schema": {
              "$ref": "#/definitions/status"
            }
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "RatePlan"
        ]
      },
      "delete": {
        "summary": "Delete Best Available Rates",
        "description": "This API allows to fetch Best Available rates for rate code(s). <p><strong>OperationId:</strong>deleteBestAvailableRates</p>",
        "operationId": "deleteBestAvailableRates",
        "parameters": [
          {
            "name": "hotelId",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 2000,
            "description": "Unique ID that identifies a single hotel property."
          },
          {
            "name": "code",
            "in": "query",
            "type": "array",
            "collectionFormat": "multi",
            "items": {
              "type": "string",
              "maxItems": 4000
            },
            "required": true
          },
          {
            "name": "end",
            "in": "query",
            "required": true,
            "description": "The ending value of the date range.",
            "type": "string",
            "format": "date"
          },
          {
            "name": "start",
            "in": "query",
            "required": true,
            "description": "The starting value of the date range.",
            "type": "string",
            "format": "date"
          },
          {
            "name": "friday",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "monday",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "saturday",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "sunday",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "thursday",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "tuesday",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "wednesday",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "lOS1",
            "in": "query",
            "required": false,
            "description": "Indicates Length of Stay 1 configuration.",
            "type": "boolean"
          },
          {
            "name": "lOS2",
            "in": "query",
            "required": false,
            "description": "Indicates Length of Stay 2 configuration.",
            "type": "boolean"
          },
          {
            "name": "lOS3",
            "in": "query",
            "required": false,
            "description": "Indicates Length of Stay 3 configuration.",
            "type": "boolean"
          },
          {
            "name": "lOS4",
            "in": "query",
            "required": false,
            "description": "Indicates Length of Stay 4 configuration.",
            "type": "boolean"
          },
          {
            "name": "lOS5",
            "in": "query",
            "required": false,
            "description": "Indicates Length of Stay 5 configuration.",
            "type": "boolean"
          },
          {
            "name": "lOS6",
            "in": "query",
            "required": false,
            "description": "Indicates Length of Stay 6 configuration.",
            "type": "boolean"
          },
          {
            "name": "lOS7",
            "in": "query",
            "required": false,
            "description": "Indicates Length of Stay 7 configuration.",
            "type": "boolean"
          },
          {
            "name": "lOS8",
            "in": "query",
            "required": false,
            "description": "Indicates Length of Stay 8 configuration.",
            "type": "boolean"
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "200": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            },
            "description": "HATEOAS links which help the consumer to navigate to resources",
            "schema": {
              "$ref": "#/definitions/status"
            }
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "RatePlan"
        ]
      }
    },
    "/hotels/{hotelId}/negotiatedRates": {
      "get": {
        "summary": "Get negotiated rates and profiles ",
        "description": "This API allows you to fetch negotiated rates and profile for a given hotel id. <p><strong>OperationId:</strong>getNegotiatedRates</p>",
        "operationId": "getNegotiatedRates",
        "parameters": [
          {
            "name": "hotelId",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 2000,
            "description": "Unique ID that identifies a single hotel property."
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "description": "Indicates maximum number of records a Web Service should return.",
            "type": "integer"
          },
          {
            "name": "startDate",
            "in": "query",
            "required": false,
            "description": "Start Date.",
            "type": "string",
            "format": "date"
          },
          {
            "name": "endDate",
            "in": "query",
            "required": false,
            "description": "End Date.",
            "type": "string",
            "format": "date"
          },
          {
            "name": "includeInactiveNegotiatedRates",
            "in": "query",
            "required": false,
            "description": "Inactive negotiated rates.",
            "type": "boolean"
          },
          {
            "name": "fetchInstructions",
            "in": "query",
            "type": "array",
            "collectionFormat": "multi",
            "description": "Simple type for negotiated rates instructions that can be used in requests for partial operations.",
            "uniqueItems": true,
            "items": {
              "type": "string",
              "enum": [
                "Discounts"
              ]
            },
            "required": false
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "200": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              }
            },
            "description": "Response object for fetching negotiated rates and profile discounts.",
            "schema": {
              "$ref": "#/definitions/negotiatedRates"
            }
          },
          "204": {
            "description": "NegotiatedRates not found."
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "RatePlan"
        ]
      },
      "post": {
        "summary": "Create negotiated rates ",
        "description": "This API allows you to create negotiated rate for a given profile. <p><strong>OperationId:</strong>postNegotiatedRates</p>",
        "operationId": "postNegotiatedRates",
        "parameters": [
          {
            "name": "hotelId",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 2000,
            "description": "Unique ID that identifies a single hotel property."
          },
          {
            "name": "negotiatedRates",
            "in": "body",
            "required": true,
            "description": "Request object for creating negotiated rates. Also this object creates new profile discounts for given negotiated rates.",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/negotiatedRates"
                }
              ]
            }
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "201": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            },
            "description": "HATEOAS links which help the consumer to navigate to resources",
            "schema": {
              "$ref": "#/definitions/status"
            }
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "RatePlan"
        ]
      }
    },
    "/hotels/{hotelId}/negotiatedRates/{rateCode}": {
      "put": {
        "summary": "Change negotiated rates ",
        "description": "This API allows you to update negotiated rate for a given profile. <p><strong>OperationId:</strong>putNegotiatedRates</p>",
        "operationId": "putNegotiatedRates",
        "parameters": [
          {
            "name": "rateCode",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 2000,
            "description": "Rate Plan Code."
          },
          {
            "name": "hotelId",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 2000,
            "description": "Unique ID that identifies a single hotel property."
          },
          {
            "name": "negotiatedRates",
            "in": "body",
            "required": true,
            "description": "Request object for changing negotiated rates. This object can be used to manage the negotiated rates and profile discounts. Profile discounts can be created/updated/deleted.",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/negotiatedRates"
                }
              ]
            }
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "200": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            },
            "description": "Existing Operations Responses will eventually be modified to be extended from this type.",
            "schema": {
              "$ref": "#/definitions/negotiatedRatesDetails"
            }
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "RatePlan"
        ]
      }
    }
  },
  "parameters": {
    "authKey": {
      "name": "authorization",
      "description": "Bearer token that needs to be passed which is generated post user authentication",
      "type": "string",
      "in": "header",
      "required": true
    },
    "x-app-key": {
      "name": "x-app-key",
      "description": "Client or Partner’s Application Key",
      "type": "string",
      "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$",
      "in": "header",
      "required": true
    },
    "x-hotelid": {
      "name": "x-hotelid",
      "type": "string",
      "description": "Mandatory parameter to identify the hotel code where the end user is logged in",
      "in": "header",
      "required": true
    },
    "x-externalsystem": {
      "name": "x-externalsystem",
      "type": "string",
      "maxLength": 80,
      "description": "External system code.",
      "in": "header",
      "x-example": "EXTERNALSYSTEMCODE"
    },
    "Accept-Language": {
      "name": "Accept-Language",
      "type": "string",
      "description": "Language code",
      "in": "header"
    }
  },
  "responses": {
    "400": {
      "description": "Bad Request",
      "schema": {
        "$ref": "#/definitions/exceptionDetailType"
      }
    },
    "401": {
      "description": "Unauthorized"
    },
    "403": {
      "description": "Forbidden"
    },
    "404": {
      "description": "Resource not found",
      "schema": {
        "$ref": "#/definitions/exceptionDetailType"
      }
    },
    "405": {
      "description": "Method not allowed"
    },
    "406": {
      "description": "Not acceptable."
    },
    "413": {
      "description": "Request Entity Too Large"
    },
    "414": {
      "description": "Request URI Too Large"
    },
    "415": {
      "description": "Unsupported Media Type"
    },
    "500": {
      "description": "System Error",
      "schema": {
        "$ref": "#/definitions/exceptionDetailType"
      }
    },
    "502": {
      "description": "Bad Gateway"
    },
    "503": {
      "description": "Service Unavailable"
    }
  },
  "definitions": {
    "getBestAvailableRatesDetails": {
      "type": "object",
      "properties": {
        "bestAvailableRatesList": {
          "description": "The list of best available rates for rate code(s)",
          "$ref": "#/definitions/bestAvailableRatesListType"
        },
        "totalPages": {
          "description": "Evaluated total page count based on the requested max fetch count.",
          "type": "integer"
        },
        "offset": {
          "description": "Index or initial index of the set(page) being requested. If the index goes out of the bounds of the total set count then no data will be returned.",
          "type": "integer"
        },
        "limit": {
          "description": "Indicates maximum number of records a Web Service should return.",
          "type": "integer"
        },
        "hasMore": {
          "description": "Indicates whether all the records are included in the response or not. Absence of the attribute values should be consider as all rows fetched in the response.",
          "type": "boolean"
        },
        "totalResults": {
          "description": "Total number of rows queried",
          "type": "integer"
        },
        "count": {
          "description": "Total number of rows returned",
          "type": "integer"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "bestAvailableRatesListType": {
      "type": "object",
      "description": "The list of best availabe rates for rate code(s)",
      "properties": {
        "bestAvailableRates": {
          "description": "Collection of best available rates for rate code(s)",
          "type": "array",
          "maxItems": 4000,
          "items": {
            "$ref": "#/definitions/bestAvailableRateType"
          }
        },
        "masterInfoList": {
          "description": "The list of references of rate code selected as best available rates",
          "type": "array",
          "maxItems": 4000,
          "items": {
            "$ref": "#/definitions/masterInfo"
          }
        },
        "hotelId": {
          "description": "Hotel code for which best available rates will be considered.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        }
      }
    },
    "bestAvailableRateType": {
      "type": "object",
      "description": "The list of best availabe rates for rates code(s).",
      "properties": {
        "rateCode": {
          "description": "Rate Code selected to be search.",
          "$ref": "#/definitions/codeListType"
        },
        "lengthOfStay": {
          "description": "Best available rate length of stay",
          "type": "integer"
        },
        "date": {
          "description": "Best available rate date available",
          "type": "string",
          "format": "date",
          "maxLength": 8
        }
      }
    },
    "codeListType": {
      "type": "array",
      "maxItems": 4000,
      "items": {
        "type": "string",
        "minLength": 0,
        "maxLength": 20
      }
    },
    "masterInfo": {
      "type": "object",
      "description": "The reference to the rate codes selected as best availabe rates",
      "properties": {
        "rate": {
          "description": "Rate Codes for which best available rates will be considered.",
          "$ref": "#/definitions/codeDescriptionType"
        }
      }
    },
    "codeDescriptionType": {
      "type": "object",
      "description": "This contains a generic code and description information.",
      "properties": {
        "code": {
          "description": "Code.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "description": {
          "description": "description.",
          "type": "string",
          "minLength": 0,
          "maxLength": 2000
        }
      }
    },
    "warningsType": {
      "type": "array",
      "description": "Used in conjunction with the Success element to define a business error.",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/warningType"
      }
    },
    "warningType": {
      "type": "object",
      "description": "Used when a message has been successfully processed to report any warnings or business errors that occurred.",
      "properties": {
        "value": {
          "type": "string",
          "description": "Property Value"
        },
        "shortText": {
          "description": "An abbreviated version of the error in textual format.",
          "type": "string",
          "maxLength": 2000
        },
        "code": {
          "description": "If present, this refers to a table of coded values exchanged between applications to identify errors or warnings.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "docURL": {
          "description": "If present, this URL refers to an online description of the error that occurred.",
          "type": "string",
          "maxLength": 2000
        },
        "status": {
          "description": "If present, recommended values are those enumerated in the ErrorRS, (NotProcessed Incomplete Complete Unknown) however, the data type is designated as string data, recognizing that trading partners may identify additional status conditions not included in the enumeration.",
          "type": "string",
          "maxLength": 2000
        },
        "tag": {
          "description": "If present, this attribute may identify an unknown or misspelled tag that caused an error in processing. It is recommended that the Tag attribute use XPath notation to identify the location of a tag in the event that more than one tag of the same name is present in the document. Alternatively, the tag name alone can be used to identify missing data [Type=ReqFieldMissing].",
          "type": "string",
          "maxLength": 2000
        },
        "recordId": {
          "description": "If present, this attribute allows for batch processing and the identification of the record that failed amongst a group of records. This value may contain a concatenation of a unique failed transaction ID with specific record(s) associated with that transaction.",
          "type": "string",
          "maxLength": 2000
        },
        "type": {
          "description": "The Warning element MUST contain the Type attribute that uses a recommended set of values to indicate the warning type. The validating XSD can expect to accept values that it has NOT been explicitly coded for and process them by using Type =\"Unknown\".",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "language": {
          "description": "Language identification.",
          "type": "string",
          "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
        },
        "rph": {
          "description": "Reference Place Holder used as an index for this warning.",
          "type": "string",
          "minLength": 1,
          "maxLength": 8
        }
      }
    },
    "exceptionDetailType": {
      "title": "Error Detail",
      "description": "Complex type that contains error details for a REST call.",
      "type": "object",
      "properties": {
        "type": {
          "type": "string",
          "description": "Absolute URI [RFC3986] that identifies the problem type.  When dereferenced, it SHOULD provide a human-readable summary of the problem (for example, using HTML)."
        },
        "title": {
          "type": "string",
          "description": "Short, human-readable summary of the problem.  The summary SHOULD NOT change for subsequent occurrences of the problem, except for purposes of localization."
        },
        "status": {
          "type": "integer",
          "description": "HTTP status code for this occurrence of the problem, set by the origin server."
        },
        "detail": {
          "type": "string",
          "description": "Human-readable description specific to this occurrence of the problem."
        },
        "instance": {
          "type": "string",
          "description": "Absolute URI that identifies the specific occurrence of the problem.  It may or may not provide additional information if dereferenced."
        },
        "o:errorCode": {
          "type": "string",
          "description": "Application error code, which is different from HTTP error code."
        },
        "o:errorPath": {
          "type": "string",
          "description": "Path to the problem at the resource or property level."
        },
        "o:errorDetails": {
          "description": "Details of the error message, consisting of a hierarchical tree structure.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/errorInstance"
          }
        },
        "links": {
          "$ref": "#/definitions/links"
        }
      },
      "required": [
        "type",
        "title"
      ]
    },
    "errorInstance": {
      "title": "Error Instance Details",
      "description": "Complex type that contains error instance details for a REST call.",
      "type": "object",
      "properties": {
        "type": {
          "type": "string",
          "description": "Absolute URI [RFC3986] that identifies the problem type.  When dereferenced, it SHOULD provide a human-readable summary of the problem (for example, using HTML)."
        },
        "title": {
          "type": "string",
          "description": "Short, human-readable summary of the problem.  The summary SHOULD NOT change for subsequent occurrences of the problem, except for purposes of localization."
        },
        "status": {
          "type": "integer",
          "description": "HTTP status code for this occurrence of the problem, set by the origin server."
        },
        "detail": {
          "type": "string",
          "description": "Human-readable description specific to this occurrence of the problem."
        },
        "instance": {
          "type": "string",
          "description": "Absolute URI that identifies the specific occurrence of the problem.  It may or may not provide additional information if dereferenced."
        },
        "o:errorCode": {
          "type": "string",
          "description": "Application error code, which is different from HTTP error code."
        },
        "o:errorPath": {
          "type": "string",
          "description": "Path to the problem at the resource or property level."
        }
      },
      "required": [
        "type",
        "title"
      ]
    },
    "links": {
      "type": "array",
      "items": {
        "$ref": "#/definitions/instanceLink"
      }
    },
    "instanceLink": {
      "type": "object",
      "description": "Metadata describing link description objects that MAY appear in the JSON instance representation.",
      "properties": {
        "href": {
          "description": "URI [RFC3986] or URI Template [RFC6570]. If the value is set to URI Template, then the \"templated\" property must be set to true.",
          "type": "string"
        },
        "rel": {
          "description": "Name of the link relation that, in addition to the type property, can be used to retrieve link details. For example, href or profile.",
          "type": "string"
        },
        "templated": {
          "description": "Boolean flag that specifies that \"href\" property is a URI or URI Template. If the property is a URI template, set this value to true. By default, this value is false.",
          "type": "boolean",
          "default": false
        },
        "method": {
          "description": "HTTP method for requesting the target of the link.",
          "type": "string",
          "enum": [
            "GET",
            "POST",
            "PUT",
            "DELETE",
            "PATCH",
            "OPTIONS",
            "HEAD"
          ]
        },
        "targetSchema": {
          "description": "Link to the metadata of the resource, such as JSON-schema, that describes the resource expected when dereferencing the target resource..",
          "type": "string"
        },
        "operationId": {
          "description": "The operationId of the path you can call to follow this link.  This allows you to look up not only the path and method, but the description of that path and any parameters you need to supply.",
          "type": "string"
        },
        "title": {
          "description": "Exact copy of the \"summary\" field on the linked operation.",
          "type": "string"
        }
      },
      "required": [
        "href",
        "rel",
        "method",
        "operationId"
      ]
    },
    "createBestAvailableRates": {
      "type": "object",
      "description": "Request to create best available rates for rate code(s)",
      "properties": {
        "bestAvailableRates": {
          "description": "The best available rates created.",
          "$ref": "#/definitions/bestAvailableRatesType"
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "bestAvailableRatesType": {
      "type": "object",
      "description": "The best available rate for rate code(s)",
      "properties": {
        "hotelId": {
          "description": "Hotel Code for Best Available Rate",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "rateCode": {
          "description": "Rate Code selected to be search.",
          "$ref": "#/definitions/codeListType"
        },
        "dateRange": {
          "description": "Date range for the best available rates.",
          "$ref": "#/definitions/dateRangeType"
        },
        "duration": {
          "description": "Days for which best available rates will be considered",
          "type": "object",
          "properties": {
            "sunday": {
              "type": "boolean"
            },
            "monday": {
              "type": "boolean"
            },
            "tuesday": {
              "type": "boolean"
            },
            "wednesday": {
              "type": "boolean"
            },
            "thursday": {
              "type": "boolean"
            },
            "friday": {
              "type": "boolean"
            },
            "saturday": {
              "type": "boolean"
            }
          }
        },
        "lengthOfStay": {
          "description": "Length of Stay for which best available rates will be considered",
          "type": "object",
          "properties": {
            "lOS1": {
              "description": "Indicates Length of Stay 1 configuration.",
              "type": "boolean"
            },
            "lOS2": {
              "description": "Indicates Length of Stay 2 configuration.",
              "type": "boolean"
            },
            "lOS3": {
              "description": "Indicates Length of Stay 3 configuration.",
              "type": "boolean"
            },
            "lOS4": {
              "description": "Indicates Length of Stay 4 configuration.",
              "type": "boolean"
            },
            "lOS5": {
              "description": "Indicates Length of Stay 5 configuration.",
              "type": "boolean"
            },
            "lOS6": {
              "description": "Indicates Length of Stay 6 configuration.",
              "type": "boolean"
            },
            "lOS7": {
              "description": "Indicates Length of Stay 7 configuration.",
              "type": "boolean"
            },
            "lOS8": {
              "description": "Indicates Length of Stay 8 configuration.",
              "type": "boolean"
            }
          }
        }
      }
    },
    "dateRangeType": {
      "type": "object",
      "description": "Date Range with Start and End dates.",
      "properties": {
        "start": {
          "description": "The starting value of the date range.",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "end": {
          "description": "The ending value of the date range.",
          "type": "string",
          "format": "date",
          "maxLength": 8
        }
      }
    },
    "status": {
      "type": "object",
      "description": "Existing Operations Responses will eventually be modified to be extended from this type.",
      "properties": {
        "warnings": {
          "$ref": "#/definitions/warningsType"
        },
        "links": {
          "$ref": "#/definitions/links"
        }
      }
    },
    "negotiatedRates": {
      "type": "object",
      "description": "Response object for fetching negotiated rates and profile discounts.",
      "properties": {
        "negotiatedRates": {
          "description": "Negotiated rates based on the search criteria.",
          "$ref": "#/definitions/negotiatedRatesType"
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "negotiatedRatesType": {
      "type": "array",
      "description": "List of Negotiated rates to be maintained.",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/negotiatedRateType"
      }
    },
    "negotiatedRateType": {
      "type": "object",
      "description": "Negotiated rate details",
      "properties": {
        "negotiatedProfile": {
          "description": "Collection of Negotiated profiles.",
          "type": "array",
          "maxItems": 4000,
          "items": {
            "$ref": "#/definitions/negotiatedProfileType"
          }
        },
        "hotelId": {
          "description": "Hotel Code.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "ratePlanCode": {
          "description": "Rate plan code.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        }
      }
    },
    "negotiatedProfileType": {
      "type": "object",
      "description": "Profile details",
      "properties": {
        "profileIdList": {
          "description": "Unique id for the Negotiated profile.",
          "$ref": "#/definitions/uniqueIDListType"
        },
        "profileName": {
          "description": "Name details for the profile.",
          "$ref": "#/definitions/profileNameType"
        },
        "rateInfoList": {
          "description": "collection of Negotiated rates.",
          "type": "array",
          "maxItems": 4000,
          "items": {
            "$ref": "#/definitions/negRateAccessType"
          }
        },
        "profileType": {
          "description": "Type of profile such as Guest, Agent, Company, Group, Source, Employee, Hotel, Vendor or Contact.",
          "$ref": "#/definitions/profileTypeType"
        }
      }
    },
    "uniqueIDListType": {
      "type": "array",
      "description": "Unique Id that references an object uniquely in the system.",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/uniqueID_Type"
      }
    },
    "uniqueID_Type": {
      "type": "object",
      "description": "An identifier used to uniquely reference an object in a system (e.g. an airline reservation reference, customer profile reference, booking confirmation number, or a reference to a previous availability quote).",
      "properties": {
        "id": {
          "description": "A unique identifying value assigned by the creating system. The ID attribute may be used to reference a primary-key value within a database or in a particular implementation.",
          "type": "string",
          "minLength": 0,
          "maxLength": 80
        },
        "type": {
          "description": "A reference to the type of object defined by the UniqueID element.",
          "type": "string",
          "minLength": 0,
          "maxLength": 40
        }
      }
    },
    "profileNameType": {
      "type": "object",
      "description": "This provides name information for a person.",
      "properties": {
        "name": {
          "description": "Family name, last name or Company Name.",
          "type": "string",
          "minLength": 0,
          "maxLength": 40
        },
        "fullName": {
          "description": "Full display Name.",
          "type": "string",
          "minLength": 0,
          "maxLength": 200
        },
        "namePrefix": {
          "description": "Salutation of honorific (e.g. Mr., Mrs., Ms., Miss, Dr.)",
          "type": "string",
          "minLength": 0,
          "maxLength": 40
        },
        "givenName": {
          "description": "Given name, first name or names.",
          "type": "string",
          "minLength": 0,
          "maxLength": 40
        },
        "middleName": {
          "description": "The middle name of the person name.",
          "type": "string",
          "minLength": 0,
          "maxLength": 40
        },
        "nameSuffix": {
          "description": "Hold various name suffixes and letters (e.g. Jr., Sr., III, Ret., Esq.)",
          "type": "string",
          "minLength": 0,
          "maxLength": 40
        },
        "nameTitle": {
          "description": "Degree or honors (e.g., Ph.D., M.D.)",
          "type": "string",
          "minLength": 0,
          "maxLength": 80
        },
        "nameType": {
          "description": "Type of name of the individual, such as former, nickname, alternate or alias name.",
          "$ref": "#/definitions/personNameTypeType"
        }
      }
    },
    "personNameTypeType": {
      "type": "string",
      "description": "Person's name in an external system.",
      "enum": [
        "Primary",
        "Alternate",
        "Incognito",
        "External",
        "Phonetic"
      ]
    },
    "negRateAccessType": {
      "type": "object",
      "description": "Details of Negotiated rate.",
      "properties": {
        "commissionCode": {
          "description": "Commission code for the negotiated rate.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "negotiatedRateOrder": {
          "description": "Sequence for the negotiated rate.",
          "type": "integer"
        },
        "newTimeSpan": {
          "description": "Valid Time span for the negotiated rate.",
          "$ref": "#/definitions/timeSpanType"
        },
        "discounts": {
          "description": "List of discounts for the negotiated rate.",
          "type": "array",
          "maxItems": 4000,
          "items": {
            "$ref": "#/definitions/profileDiscountType"
          }
        },
        "start": {
          "description": "The starting value of the date range.",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "end": {
          "description": "The ending value of the date range.",
          "type": "string",
          "format": "date",
          "maxLength": 8
        }
      }
    },
    "timeSpanType": {
      "type": "object",
      "description": "Allows for a choice in description of the amount of time spanned by this type. EndDate specifies a specific date, while Duration provides a measure of time to add to the StartDate to yield end date.",
      "properties": {
        "startDate": {
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "endDate": {
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "duration": {
          "type": "string"
        }
      }
    },
    "profileDiscountType": {
      "type": "object",
      "description": "Discount details for a profile.",
      "properties": {
        "dateRangeDetails": {
          "description": "Valid Time span for the discount rate and days of week details.",
          "$ref": "#/definitions/timeSpanDaysOfWeekType"
        },
        "discAmount": {
          "description": "Discount amount value and type. Percentage or flat for a discounted rate.",
          "type": "object",
          "properties": {
            "amount": {
              "type": "number"
            },
            "flatOrPercentage": {
              "type": "string",
              "maxLength": 2000
            }
          }
        },
        "url": {
          "description": "URL that identifies the location associated with the record identified by the UniqueID.",
          "type": "string",
          "maxLength": 2000
        },
        "type": {
          "description": "A reference to the type of object defined by the UniqueID element.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "instance": {
          "description": "The identification of a record as it exists at a point in time. An instance is used in update messages where the sender must assure the server that the update sent refers to the most recent modification level of the object being updated.",
          "type": "string",
          "minLength": 0,
          "maxLength": 80
        },
        "idContext": {
          "description": "Used to identify the source of the identifier (e.g., IATA, ABTA).",
          "type": "string",
          "minLength": 0,
          "maxLength": 80
        },
        "id": {
          "description": "A unique identifying value assigned by the creating system. The ID attribute may be used to reference a primary-key value within a database or in a particular implementation.",
          "type": "string",
          "minLength": 0,
          "maxLength": 80
        },
        "idExtension": {
          "description": "Additional identifying value assigned by the creating system.",
          "type": "integer"
        }
      }
    },
    "timeSpanDaysOfWeekType": {
      "type": "object",
      "description": "Container for Time span with days of week.",
      "properties": {
        "timeSpan": {
          "$ref": "#/definitions/timeSpanType"
        },
        "sunday": {
          "type": "boolean"
        },
        "monday": {
          "type": "boolean"
        },
        "tuesday": {
          "type": "boolean"
        },
        "wednesday": {
          "type": "boolean"
        },
        "thursday": {
          "type": "boolean"
        },
        "friday": {
          "type": "boolean"
        },
        "saturday": {
          "type": "boolean"
        }
      }
    },
    "profileTypeType": {
      "type": "string",
      "description": "The types of Profile handled by the web service.",
      "enum": [
        "Guest",
        "Agent",
        "Company",
        "Group",
        "Source",
        "Employee",
        "Hotel",
        "Vendor",
        "Contact",
        "Purge",
        "BusinessHeader",
        "BillingAccount",
        "Activity",
        "Potential",
        "Account"
      ]
    },
    "negotiatedRatesDetails": {
      "type": "object",
      "description": "Existing Operations Responses will eventually be modified to be extended from this type.",
      "properties": {
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    }
  },
  "tags": [
    {
      "name": "RatePlan",
      "description": "The Rate Plan APIs allow for creating, managing, and retrieving rates and their related components such as negotiated rates and packages."
    }
  ],
  "externalDocs": {
    "description": "Find out more about Oracle Hospitality",
    "url": "https://docs.oracle.com/en/industries/hospitality/integration_platforms.html"
  }
}